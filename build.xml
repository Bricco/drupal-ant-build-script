<project basedir=".">

  <!-- check ant version -->
  <antversion property="antversion" atleast="1.8" />
  <fail unless="antversion">
    Ant must be at least version 1.8
  </fail>

  <!-- We're using both version 5 and 6, that's why this code is uncommented. -->
  <!-- check drush version -->
  <!--exec executable="drush" failonerror="true" outputproperty="drushversionstring">
    <arg line="--version" />
  </exec-->
  <!-- drushversionstring should look like this: "drush version 5.7" -->
  <!--condition property="drushversion">
    <contains string="${drushversionstring}" substring=" 5." />
  </condition>
  <fail unless="drushversion">
    Drush must be version 5.x
  </fail-->

  <fail unless="environment">
    You have to set the environment property. I e
    &lt;property name="environment" value="DEV" /&gt;
  </fail>

  <!-- fail if DEV and drupal.deploy.dir is NOT a valid dir -->
  <condition property="drupal.deploy.dir.missing">
    <and>
      <equals arg1="${environment}" arg2="DEV" />
      <not>
        <available file="${drupal.deploy.dir}" />
      </not>
    </and>
  </condition>
  <fail if="drupal.deploy.dir.missing">
    Property drupal.deploy.dir must be set.
    For developers: Set the property in Eclipse Window > Preferences > Ant > Runtime > Properties > Global properties 
    The directory must exist!
  </fail>

  <!-- set up filtering -->
  <property name="deploy.dir" value="${drupal.deploy.dir}/${ant.project.name}" />
  <filter token="deploy.dir" value="${deploy.dir}" />
  <filter filtersfile="environment.${environment}.properties" />


  <!-- public target called from Bamboo deploy jobs -->
  <target name="deploy-all" depends="-drush-setup,-drush-make,-copy-php,-drush-run-rsync-with-delete,-drush-clear-apc,-drush-runs,-drush-run-cc,-varnish-reload,-files-as-www-data,-cleanup" description="Full install of Drupal based on the make file" />

  <!-- public target called from Bamboo automatic jobs -->
  <target name="deploy-auto" depends="-drush-setup,-copy-php,-drush-run-rsync-no-delete,-drush-run-cc,-cleanup" description="Copies PHP to the Drupal installation" />

  <!-- public target to install locally -->
  <target name="local-install" depends="-drush-setup,-local-pre-make,-drush-make,-copy-php,-drush-run-rsync-with-delete,-local-post-make,-drush-runs,-drush-run-cc,-cleanup" description="Full local install of Drupal based on the make file" />

  <!-- public target to update content locally -->
  <target name="local-update-content" depends="-local-update-database,-local-update-files" description="Update the local content with PROD data" />

  <!-- public target to update test content from PROD -->
    <target name="test-content-update" depends="-drush-setup" description="Updates the TEST environment from the content from the PROD environment">
 
      <mkdir dir="tmp/drush" />
  
      <copy file="${user.home}/.drush/${ant.project.name}.aliases.drushrc.php" todir="tmp/drush" overwrite="true" />
      
      <!-- rsync the aliases -->
       <exec executable="drush" resolveexecutable="true" dir="${basedir}">
             <arg line="-y rsync ${basedir}/tmp/drush/ @${ant.project.name}.TEST:sites/all/drush" />
       </exec>
      
      <property file="environment.TEST.properties" />
      
      <!-- rsync the files -->
      <exec executable="drush" resolveexecutable="true" dir="${basedir}">
            <arg line="@${ant.project.name}.TEST ssh 'drush -y -r ${drupal.root} rsync @${ant.project.name}.PROD:sites/default/files/ ${drupal.root}/sites/default/files/'" />              
      </exec>

      <!-- sync the database -->
      <exec executable="drush" resolveexecutable="true" dir="${basedir}">
        <arg line="-y sql-sync @${ant.project.name}.PROD @${ant.project.name}.TEST --no-ordered-dump --no-cache" />
      </exec>

      <!-- clear cache on TEST -->
      <exec executable="drush" resolveexecutable="true" dir="${basedir}">
        <arg line="@${ant.project.name}.TEST cc all" />
      </exec>
      
      <delete dir="tmp/" failonerror="false" />
    </target>


  <!-- public target reset admin user -->
  <target name="local-reset-admin-login" description="reset user 1 login">

    <exec executable="drush" resolveexecutable="true" dir="${basedir}">
      <arg line="-r ${deploy.dir} sqlq &quot;UPDATE {users} SET name='admin' WHERE uid=1&quot; --db-prefix" />
    </exec>

    <input message="Please enter new admin password:" addproperty="admin.pass" />

    <exec executable="drush" resolveexecutable="true" dir="${basedir}">
      <arg line="@${ant.project.name}.${environment} upwd admin --password='${admin.pass}'" />
    </exec>

  </target>

  <target name="local-copy-settings" description="copy all settings.php files">
    <echo> copy and filter all *settings.php files</echo>
    <copy todir="${deploy.dir}" filtering="true">
      <fileset dir="${basedir}">
        <include name="**/*settings.php" />
      </fileset>
    </copy>
  </target>

  <!-- private target, sets up drush env -->
  <target name="-drush-setup">
    <mkdir dir="${user.home}/.drush" />
    <property name="drush-aliases-file" value="${user.home}/.drush/${ant.project.name}.aliases.drushrc.php" />

    <!-- generate drush aliases file -->
    <echo file="${drush-aliases-file}">&lt;?php 
      $skip_on_update = array(
        'cache',
        'cache_filter',
        'cache_menu',
        'cache_page', 
        'cache_media_xml', 
        'cache_metatag', 
        'cache_path', 
        'cache_rules', 
        'cache_token', 
        'cache_update', 
        'cache_views', 
        'cache_views_data',
        'cache_block',
        'cache_bootstrap',
        'cache_field',
        'cache_form',
        'cache_image',
        'history',
        'sessions',
        'watchdog',
        'search_dataset',
        'search_index',
        'search_node_links',
        'search_total',
      );
    </echo>
    <available file="environment.DEV.properties" property="dev-env-file-exists" />
    <antcall target="-drush-aliases-append-DEV" />
    <available file="environment.TEST.properties" property="test-env-file-exists" />
    <antcall target="-drush-aliases-append-TEST" />
    <available file="environment.PROD.properties" property="prod-env-file-exists" />
    <antcall target="-drush-aliases-append-PROD" />
    <echo file="${drush-aliases-file}" append="true">?&gt;</echo>

    <!-- delete tmp dir just in case -->
    <delete dir="tmp/" failonerror="false" />
  </target>

  <!-- private target, append settings from DEV env file -->
  <target name="-drush-aliases-append-DEV" if="dev-env-file-exists">
    <antcall target="-drush-aliases-append">
      <param name="append.env" value="DEV" />
      <param name="append.env.file" value="environment.DEV.properties" />
    </antcall>
  </target>

  <!-- private target, append settings from TEST env file -->
  <target name="-drush-aliases-append-TEST" if="test-env-file-exists">
    <antcall target="-drush-aliases-append">
      <param name="append.env" value="TEST" />
      <param name="append.env.file" value="environment.TEST.properties" />
    </antcall>
  </target>

  <!-- private target, append settings from PROD env file -->
  <target name="-drush-aliases-append-PROD" if="prod-env-file-exists">
    <antcall target="-drush-aliases-append">
      <param name="append.env" value="PROD" />
      <param name="append.env.file" value="environment.PROD.properties" />
    </antcall>
  </target>

  <!-- private target, append base settings from env file -->
  <target name="-drush-aliases-append">
    <property file="${append.env.file}" />
    <property name="drupal.root" value="${deploy.dir}" />
    <echo file="${drush-aliases-file}" append="true">
      $aliases['${append.env}'] = array ();
      $aliases['${append.env}']['uri'] = '${drupal.uri}';
      $aliases['${append.env}']['root'] = '${drupal.root}';
      $aliases['${append.env}']['dump-dir'] = '/var/tmp';
      $aliases['${append.env}']['databases'] = array('default' => array('default' => array('host' => '${db.host}', 'driver' => 'mysql', 'prefix' => '', 'port' => '' )));
      $aliases['${append.env}']['databases']['default']['default']['database'] = '${db.database}';
      $aliases['${append.env}']['databases']['default']['default']['username'] = '${db.username}';
      $aliases['${append.env}']['databases']['default']['default']['password'] = '${db.password}';
      $aliases['${append.env}']['ssh-options'] = '-o PasswordAuthentication=yes';
      $aliases['${append.env}']['command-specific'] = array(
              'rsync' => array('exclude-files' => TRUE),
              'sql-sync' => array('enable' => array('devel'), 'no-cache' => TRUE, 'skip-tables-key' => 'custom', 'skip-tables' => array('custom' => $skip_on_update)),
      );
        </echo>
    <antcall target="-drush-aliases-append-remote" />
    <antcall target="-drush-aliases-append-pathaliases" />
  </target>

  <!-- private target, append remote.* from env file -->
  <target name="-drush-aliases-append-remote" if="remote.host">
    <echo file="${drush-aliases-file}" append="true">
      $aliases['${append.env}']['remote-host'] = '${remote.host}';
      $aliases['${append.env}']['remote-user'] = '${remote.user}';
    </echo>
  </target>

  <!-- private target, append path-aliases from env file -->
  <target name="-drush-aliases-append-pathaliases" if="path-aliases.drush">
    <echo file="${drush-aliases-file}" append="true">
      $aliases['${append.env}']['path-aliases']['%drush'] = '${path-aliases.drush}';
      $aliases['${append.env}']['path-aliases']['%drush-script'] = '${path-aliases.drush-script}';
    </echo>
  </target>

  <!-- private target, run drush make based on the make file -->
  <target name="-drush-make">
    <exec executable="drush" resolveexecutable="true" dir="${basedir}" failonerror="true">
      <arg line="make ${ant.project.name}.make tmp" />
    </exec>
  </target>

  <available file="./scripts" property="scripts.dir.exists" />
  <!-- private target, copies scripts dir to the Drupal installation in tmp folder -->
  <target name="-copy-scripts" if="scripts.dir.exists">
    <mkdir dir="tmp/scripts" />
    <copy todir="tmp/scripts" filtering="true" overwrite="true" failonerror="false">
      <fileset dir="scripts">
        <include name="*" />
      </fileset>
    </copy>
    <chmod perm="a+x">
      <fileset dir="tmp/scripts">
        <include name="*.sh" />
      </fileset>
    </chmod>
  </target>

  <!-- private target, copies PHP to the Drupal installation in tmp folder -->
  <target name="-copy-php" depends="-copy-scripts">
    <copy todir="tmp/sites" filtering="false" overwrite="true">
      <fileset dir="sites">
        <exclude name="**/settings.php" />
      </fileset>
    </copy>
    <copy todir="tmp/sites" filtering="true" overwrite="true">
      <fileset dir="sites">
        <include name="**/settings.php" />
      </fileset>
    </copy>

    <copy file="htaccess.htaccess" tofile="tmp/.htaccess" filtering="false" overwrite="true" failonerror="false" />
    <copy file="robots.txt" tofile="tmp/robots.txt" filtering="false" overwrite="true" failonerror="false" />

    <chmod perm="u+w">
      <fileset dir="tmp">
        <include name="**/settings.php" />
      </fileset>
    </chmod>
  </target>

  <!-- private target, runs various drush commands -->
  <target name="-drush-runs">

    <!-- Run all pending updates -->
    <exec executable="drush" resolveexecutable="true" dir="tmp" failonerror="true">
      <arg line="-y @${ant.project.name}.${environment} updb" />
    </exec>

    <!-- Enable features module -->
    <exec executable="drush" resolveexecutable="true" dir="tmp" failonerror="false">
      <arg line="-y @${ant.project.name}.${environment} en features" />
    </exec>
    <!-- Revert all features -->
    <exec executable="drush" resolveexecutable="true" dir="tmp" failonerror="false">
      <arg line="-y @${ant.project.name}.${environment} fra" />
    </exec>

  </target>

  <!-- private target, runs drush rsync without delete flag -->
  <target name="-drush-run-rsync-no-delete">
    <!-- Rsync the project -->
    <exec executable="drush" resolveexecutable="true" failonerror="true">
      <arg line="-y rsync ${basedir}/tmp/ @${ant.project.name}.${environment}" />
    </exec>
  </target>

  <!-- private target, runs drush rsync with delete flag -->
  <target name="-drush-run-rsync-with-delete">
    <!-- Rsync the project - remove old files -->
    <exec executable="drush" resolveexecutable="true" failonerror="true">
      <arg line="-y rsync ${basedir}/tmp/ @${ant.project.name}.${environment} --delete --omit-dir-times" />
    </exec>
  </target>

  <!-- private target, runs drush cache clear -->
  <target name="-drush-run-cc">
    <exec executable="drush" resolveexecutable="true" dir="tmp">
      <arg line="@${ant.project.name}.${environment} cc all" />
    </exec>
  </target>

  <!-- private target, cleans up after deploy -->
  <target name="-cleanup">
    <delete dir="tmp" />
  </target>

  <!-- private target, clear apc cache -->
  <target name="-drush-clear-apc">
    <exec executable="drush" resolveexecutable="true">
      <arg line="@${ant.project.name}.${environment} ssh &quot;drush php-eval 'if(function_exists(apc_clear_cache)) apc_clear_cache();'&quot;" />
    </exec>
    <echo>APC cache has been emptied</echo>
  </target>

  <!-- private target, check if vcl is present -->
  <target name="-vcl.check">
    <available file="scripts/varnish.vcl" property="vcl.present" />
  </target>
  <!-- private target, reloads Varnish config if VCL is present in project -->
  <target name="-varnish-reload" depends="-vcl.check" if="vcl.present">
    <!-- default VCL location (Cloudnet) -->
    <property name="vclfile" value="/mnt/persist/www/varnish.vcl" />

    <!-- load new VCL into Varnish -->
    <tstamp>
      <format property="TSTAMP" pattern="hhmmss" />
    </tstamp>
    <property name="vclconfigname" value="VCL_${DSTAMP}${TSTAMP}" />
    <exec executable="drush" resolveexecutable="true" dir="${basedir}" failonerror="true">
      <arg line="@${ant.project.name}.${environment} ssh 'varnishadm -S /etc/varnish/secret -T localhost:6082 vcl.load ${vclconfigname}  ${vclfile}'" />
    </exec>
    <exec executable="drush" resolveexecutable="true" dir="${basedir}" failonerror="true">
      <arg line="@${ant.project.name}.${environment} ssh 'varnishadm -S /etc/varnish/secret -T localhost:6082 vcl.use ${vclconfigname}'" />
    </exec>
  </target>

  <!-- private target -->
  <target name="-local-pre-make">
    <symlink action="delete" link="${deploy.dir}/sites/all/modules/custom" failonerror="false" />
    <symlink action="delete" link="${deploy.dir}/sites/all/themes/custom" failonerror="false" />
    <move file="${deploy.dir}/sites/default/files" tofile="/tmp/${ant.project.name}_files" failonerror="false" />
  </target>

  <!-- private target -->
  <target name="-local-post-make">
    <delete dir="${deploy.dir}/sites/all/modules/custom" />
    <symlink overwrite="true" failonerror="true" link="${deploy.dir}/sites/all/modules/custom" resource="${basedir}/sites/all/modules/custom" />
    <delete dir="${deploy.dir}/sites/all/themes/custom" />
    <symlink overwrite="true" failonerror="true" link="${deploy.dir}/sites/all/themes/custom" resource="${basedir}/sites/all/themes/custom" />
    <move file="/tmp/${ant.project.name}_files" tofile="${deploy.dir}/sites/default/files" failonerror="false" />
    <chmod perm="g+w" dir="${deploy.dir}/sites/default/files" />
  </target>

  <!-- private target, update the local files from PROD -->
  <target name="-local-update-files" depends="-drush-setup">
    <!-- sync the files dir -->
    <exec executable="drush" resolveexecutable="true" dir="${basedir}">
      <arg line="-y rsync @${ant.project.name}.PROD:sites/default/files/ ${deploy.dir}/sites/default/files/" />
    </exec>
  </target>

  <!-- private target, update the local database from PROD -->
  <target name="-local-update-database" depends="-drush-setup">
    <!-- sync the database -->
    <exec executable="drush" resolveexecutable="true" dir="${basedir}">
      <arg line="-y sql-sync @${ant.project.name}.PROD @${ant.project.name}.${environment} --sanitize --confirm-sanitizations --sanitize-password='secret' --no-ordered-dump" />
    </exec>
  </target>

  <target name="-files-as-www-data">
    <property file="environment.${environment}.properties" />
    <exec executable="drush" resolveexecutable="true" dir="${basedir}" failonerror="false">
      <arg line="@${ant.project.name}.${environment} ssh 'chown -R www-data:www-data ${drupal.root}/sites/default/files/'" />              
    </exec>
  </target>

</project>
